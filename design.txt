Lacks zxcvbn library for password entropy checking, but otherwise fulfils
requirements for generating and using keys.

Package:
* minilock: High level library that offers convenient constructs for creating
  minilock encrypted files and headers, saving to .minilock files, or saving detached.
* minilockkeys: Handles creating, ID'ing, deserialising from ID, encryption/decryption
  for the asymmetric keys used as IDs and as ephemeral keys for header.
* minilockbox: Handles chunking and symmetric encryption of main message body.
* minilock-cli: Terminal application for encrypting/decrypting.

TODO: Refactor the shit out of the above to make it flatter and more intuitive,
godoc-friendly.
TODO: Refactor decryption brute-forcing to be concurrent and to cancel-early on
 first success.
TODO: Refactor/Repartition code more logically from header.go to encrypt.go and decrypt.go.
  * Maybe refactor into a FileInfo.go file, a DecryptInfo.go file, and a Header.go file,
    keeping en/decrypt alongside in each file.
